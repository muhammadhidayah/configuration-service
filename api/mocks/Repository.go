// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import configuration "github.com/muhammadhidayah/configuration-service/proto/configuration"
import context "context"
import mock "github.com/stretchr/testify/mock"

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// AddConfigurationClient provides a mock function with given fields: _a0, _a1
func (_m *Repository) AddConfigurationClient(_a0 context.Context, _a1 *configuration.ConfigurationClient) (bool, error) {
	ret := _m.Called(_a0, _a1)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, *configuration.ConfigurationClient) bool); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *configuration.ConfigurationClient) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AddConfigurationGlobal provides a mock function with given fields: _a0, _a1
func (_m *Repository) AddConfigurationGlobal(_a0 context.Context, _a1 *configuration.ConfigurationGlobal) (bool, error) {
	ret := _m.Called(_a0, _a1)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, *configuration.ConfigurationGlobal) bool); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *configuration.ConfigurationGlobal) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteConfiguration provides a mock function with given fields: _a0, _a1
func (_m *Repository) DeleteConfiguration(_a0 context.Context, _a1 int32) (bool, error) {
	ret := _m.Called(_a0, _a1)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, int32) bool); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int32) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteConfigurationClientBySubs provides a mock function with given fields: _a0, _a1
func (_m *Repository) DeleteConfigurationClientBySubs(_a0 context.Context, _a1 *configuration.ConfigurationClient) (bool, error) {
	ret := _m.Called(_a0, _a1)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, *configuration.ConfigurationClient) bool); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *configuration.ConfigurationClient) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetConfigurationClient provides a mock function with given fields: _a0
func (_m *Repository) GetConfigurationClient(_a0 context.Context) ([]*configuration.ConfigurationClient, error) {
	ret := _m.Called(_a0)

	var r0 []*configuration.ConfigurationClient
	if rf, ok := ret.Get(0).(func(context.Context) []*configuration.ConfigurationClient); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*configuration.ConfigurationClient)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetConfigurationClientBySubs provides a mock function with given fields: _a0, _a1
func (_m *Repository) GetConfigurationClientBySubs(_a0 context.Context, _a1 string) (*configuration.ConfigurationClient, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *configuration.ConfigurationClient
	if rf, ok := ret.Get(0).(func(context.Context, string) *configuration.ConfigurationClient); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*configuration.ConfigurationClient)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetConfigurationGlobal provides a mock function with given fields: _a0
func (_m *Repository) GetConfigurationGlobal(_a0 context.Context) ([]*configuration.ConfigurationGlobal, error) {
	ret := _m.Called(_a0)

	var r0 []*configuration.ConfigurationGlobal
	if rf, ok := ret.Get(0).(func(context.Context) []*configuration.ConfigurationGlobal); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*configuration.ConfigurationGlobal)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetConfigurationGlobalActive provides a mock function with given fields: _a0
func (_m *Repository) GetConfigurationGlobalActive(_a0 context.Context) (*configuration.ConfigurationGlobal, error) {
	ret := _m.Called(_a0)

	var r0 *configuration.ConfigurationGlobal
	if rf, ok := ret.Get(0).(func(context.Context) *configuration.ConfigurationGlobal); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*configuration.ConfigurationGlobal)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetConfigurationGlobalByID provides a mock function with given fields: _a0, _a1
func (_m *Repository) GetConfigurationGlobalByID(_a0 context.Context, _a1 int32) (*configuration.ConfigurationGlobal, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *configuration.ConfigurationGlobal
	if rf, ok := ret.Get(0).(func(context.Context, int32) *configuration.ConfigurationGlobal); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*configuration.ConfigurationGlobal)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, int32) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateConfigurationClientBySubs provides a mock function with given fields: _a0, _a1
func (_m *Repository) UpdateConfigurationClientBySubs(_a0 context.Context, _a1 *configuration.ConfigurationClient) (bool, error) {
	ret := _m.Called(_a0, _a1)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, *configuration.ConfigurationClient) bool); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *configuration.ConfigurationClient) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateConfigurationGlobal provides a mock function with given fields: _a0, _a1
func (_m *Repository) UpdateConfigurationGlobal(_a0 context.Context, _a1 *configuration.ConfigurationGlobal) (bool, error) {
	ret := _m.Called(_a0, _a1)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, *configuration.ConfigurationGlobal) bool); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *configuration.ConfigurationGlobal) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
